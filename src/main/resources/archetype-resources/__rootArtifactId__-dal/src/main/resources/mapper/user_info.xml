#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package}.dal.mapper.UserInfoMapper">
    <resultMap type="${package}.client.user.domain.UserInfoDomain" id="value">
        <id column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT" />
        <result column="name" property="name" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="age" property="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </resultMap>
    <sql id="table">
        user_info
    </sql>
    <sql id="columns">
        id, name, age
    </sql>
    <sql id="columns_view">
        name, age
    </sql>
    <sql id="conditions">
        <choose>
            <when test="id!=null">
                id = ${symbol_pound}{id, jdbcType=BIGINT}
            </when>
            <otherwise>
                <if test="name!=null">
                    and name = ${symbol_pound}{name, jdbcType=VARCHAR}
                </if>
                <if test="age!=null">
                    and age = ${symbol_pound}{age, jdbcType=INTEGER}
                </if>
            </otherwise>
        </choose>
    </sql>
    <insert id="insert" parameterType="${package}.client.user.domain.UserInfoDomain">
        insert into
        <include refid="table"/>
        (
        <if test="id!=null">
            id,
        </if>
        <if test="name!=null">
            name,
        </if>
        <if test="age!=null">
            age,
        </if>
        ) values (
        <if test="id!=null">
            ${symbol_pound}{id,jdbcType=INTEGER},
        </if>
        <if test="name!=null">
            ${symbol_pound}{name,jdbcType=VARCHAR},
        </if>
        <if test="age!=null">
            ${symbol_pound}{age,jdbcType=INTEGET},
        </if>
        )
    </insert>
    <select id="find" parameterType="${package}.client.user.query.UserInfoQuery" resultMap="value">
        select
        <include refid="columns_view"/>
        from
        <include refid="table"/>
        <where>
            <include refid="conditions"/>
        </where>
    </select>

    <select id="count" parameterType="${package}.client.user.query.UserInfoQuery" resultType="long">
        select count(*) from
        <include refid="table"/>
        <where>
            <include refid="conditions"/>
        </where>
    </select>

    <select id="get" parameterType="${package}.client.user.query.UserInfoQuery" resultMap="value">
        select
        <include refid="columns_view"/>
        from
        <include refid="table"/>
        <where>
            <include refid="conditions"/>
        </where>
        limit 1
    </select>

    <update id="update" parameterType="${package}.client.user.domain.UserInfoDomain">
        update
        <include refid="table"/>
        <set>
            <if test="name!=null">
                name = ${symbol_pound}{name, jdbcType=VARCHAR},
            </if>
            <if test="age!=null">
                age = ${symbol_pound}{age, jdbcType=INTEGER},
            </if>
        </set>
        <where>
            <if test="id!=null">
                id = ${symbol_pound}{id, jdbcType=BIGINT}
            </if>
        </where>
    </update>
    <delete id="delete" parameterType="${package}.client.user.domain.UserInfoDomain">
        delete from
        <include refid="table"/>
        <where>
            <if test="id!=null">
                id = ${symbol_pound}{id, jdbcType=BIGINT}
            </if>
        </where>
    </delete>
</mapper>